# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Image

on:
  push:
    branches:
      - dev

env:
  PROJECT_ID: bionic-mercury-421809
  PROJECT_NUMBER: 991449629434

  REPOSITORY: aizel
  REPOSITORY_REGION: aisal

  IMAGE: aizel_inference
  IMAGE_VESION: 0.0.1

  SUBMODULE_BUILD_IMAGE_TAG: aizel-face-recognition-build:0.0.1
  
jobs: 
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Connect to Artifact Registry
        run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev

      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.IMAGE_VERSION }}" >> $GITHUB_ENV

      - name: Create Submodule Build Image
        run: docker build --tag "${{ env.SUBMODULE_BUILD_IMAGE_TAG }}" ./aizel-face-recognition

      - name: Build Submodule
        run: docker run --rm --name aizel_face_recognition_build -v ./aizel-face-recognition:/root/aizel-face-recognition "${{ env.SUBMODULE_BUILD_IMAGE_TAG }}" sh -c "cd /root/aizel-face-recognition && /usr/local/maven/bin/mvn clean install -D maven.test.skip=true"

      - name: Build Docker Image
        run: docker build --tag "${{ env.IMAGE_TAG }}" .

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"